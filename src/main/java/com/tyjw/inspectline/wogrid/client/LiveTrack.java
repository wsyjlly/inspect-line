package com.tyjw.inspectline.wogrid.client;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LiveTrack.proto

public final class LiveTrack {
  private LiveTrack() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Data)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *任务ID
     * </pre>
     *
     * <code>int32 taskId = 1;</code>
     */
    int getTaskId();

    /**
     * <pre>
     *无人机ID
     * </pre>
     *
     * <code>int32 uavId = 2;</code>
     */
    int getUavId();

    /**
     * <pre>
     *任务计算机ID
     * </pre>
     *
     * <code>int32 missionComputerId = 3;</code>
     */
    int getMissionComputerId();

    /**
     * <pre>
     *无人机名称
     * </pre>
     *
     * <code>string uavName = 4;</code>
     */
    String getUavName();
    /**
     * <pre>
     *无人机名称
     * </pre>
     *
     * <code>string uavName = 4;</code>
     */
    com.google.protobuf.ByteString
        getUavNameBytes();

    /**
     * <pre>
     *纬度
     * </pre>
     *
     * <code>double latitude = 5;</code>
     */
    double getLatitude();

    /**
     * <pre>
     *经度
     * </pre>
     *
     * <code>double longitude = 6;</code>
     */
    double getLongitude();

    /**
     * <pre>
     *俯仰角
     * </pre>
     *
     * <code>float pitch = 7;</code>
     */
    float getPitch();

    /**
     * <pre>
     *倾斜角/横滚角
     * </pre>
     *
     * <code>float roll = 8;</code>
     */
    float getRoll();

    /**
     * <pre>
     *航向角
     * </pre>
     *
     * <code>float yaw = 9;</code>
     */
    float getYaw();

    /**
     * <pre>
     *相对高度
     * </pre>
     *
     * <code>float ultrasonicHeight = 10;</code>
     */
    float getUltrasonicHeight();

    /**
     * <pre>
     *海拔高度
     * </pre>
     *
     * <code>float altitudeHeight = 11;</code>
     */
    float getAltitudeHeight();

    /**
     * <pre>
     *空速
     * </pre>
     *
     * <code>float airspeed = 12;</code>
     */
    float getAirspeed();

    /**
     * <pre>
     *地速
     * </pre>
     *
     * <code>float velocity = 13;</code>
     */
    float getVelocity();

    /**
     * <pre>
     *Unix时间戳
     * </pre>
     *
     * <code>int64 timestamps = 14;</code>
     */
    long getTimestamps();
  }
  /**
   * Protobuf type {@code Data}
   */
  public  static final class Data extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Data)
      DataOrBuilder {
    // Use Data.newBuilder() to construct.
    private Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Data() {
      taskId_ = 0;
      uavId_ = 0;
      missionComputerId_ = 0;
      uavName_ = "";
      latitude_ = 0D;
      longitude_ = 0D;
      pitch_ = 0F;
      roll_ = 0F;
      yaw_ = 0F;
      ultrasonicHeight_ = 0F;
      altitudeHeight_ = 0F;
      airspeed_ = 0F;
      velocity_ = 0F;
      timestamps_ = 0L;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              taskId_ = input.readInt32();
              break;
            }
            case 16: {

              uavId_ = input.readInt32();
              break;
            }
            case 24: {

              missionComputerId_ = input.readInt32();
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              uavName_ = s;
              break;
            }
            case 41: {

              latitude_ = input.readDouble();
              break;
            }
            case 49: {

              longitude_ = input.readDouble();
              break;
            }
            case 61: {

              pitch_ = input.readFloat();
              break;
            }
            case 69: {

              roll_ = input.readFloat();
              break;
            }
            case 77: {

              yaw_ = input.readFloat();
              break;
            }
            case 85: {

              ultrasonicHeight_ = input.readFloat();
              break;
            }
            case 93: {

              altitudeHeight_ = input.readFloat();
              break;
            }
            case 101: {

              airspeed_ = input.readFloat();
              break;
            }
            case 109: {

              velocity_ = input.readFloat();
              break;
            }
            case 112: {

              timestamps_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LiveTrack.internal_static_Data_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LiveTrack.internal_static_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Data.class, Builder.class);
    }

    public static final int TASKID_FIELD_NUMBER = 1;
    private int taskId_;
    /**
     * <pre>
     *任务ID
     * </pre>
     *
     * <code>int32 taskId = 1;</code>
     */
    public int getTaskId() {
      return taskId_;
    }

    public static final int UAVID_FIELD_NUMBER = 2;
    private int uavId_;
    /**
     * <pre>
     *无人机ID
     * </pre>
     *
     * <code>int32 uavId = 2;</code>
     */
    public int getUavId() {
      return uavId_;
    }

    public static final int MISSIONCOMPUTERID_FIELD_NUMBER = 3;
    private int missionComputerId_;
    /**
     * <pre>
     *任务计算机ID
     * </pre>
     *
     * <code>int32 missionComputerId = 3;</code>
     */
    public int getMissionComputerId() {
      return missionComputerId_;
    }

    public static final int UAVNAME_FIELD_NUMBER = 4;
    private volatile Object uavName_;
    /**
     * <pre>
     *无人机名称
     * </pre>
     *
     * <code>string uavName = 4;</code>
     */
    public String getUavName() {
      Object ref = uavName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uavName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *无人机名称
     * </pre>
     *
     * <code>string uavName = 4;</code>
     */
    public com.google.protobuf.ByteString
        getUavNameBytes() {
      Object ref = uavName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uavName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LATITUDE_FIELD_NUMBER = 5;
    private double latitude_;
    /**
     * <pre>
     *纬度
     * </pre>
     *
     * <code>double latitude = 5;</code>
     */
    public double getLatitude() {
      return latitude_;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 6;
    private double longitude_;
    /**
     * <pre>
     *经度
     * </pre>
     *
     * <code>double longitude = 6;</code>
     */
    public double getLongitude() {
      return longitude_;
    }

    public static final int PITCH_FIELD_NUMBER = 7;
    private float pitch_;
    /**
     * <pre>
     *俯仰角
     * </pre>
     *
     * <code>float pitch = 7;</code>
     */
    public float getPitch() {
      return pitch_;
    }

    public static final int ROLL_FIELD_NUMBER = 8;
    private float roll_;
    /**
     * <pre>
     *倾斜角/横滚角
     * </pre>
     *
     * <code>float roll = 8;</code>
     */
    public float getRoll() {
      return roll_;
    }

    public static final int YAW_FIELD_NUMBER = 9;
    private float yaw_;
    /**
     * <pre>
     *航向角
     * </pre>
     *
     * <code>float yaw = 9;</code>
     */
    public float getYaw() {
      return yaw_;
    }

    public static final int ULTRASONICHEIGHT_FIELD_NUMBER = 10;
    private float ultrasonicHeight_;
    /**
     * <pre>
     *相对高度
     * </pre>
     *
     * <code>float ultrasonicHeight = 10;</code>
     */
    public float getUltrasonicHeight() {
      return ultrasonicHeight_;
    }

    public static final int ALTITUDEHEIGHT_FIELD_NUMBER = 11;
    private float altitudeHeight_;
    /**
     * <pre>
     *海拔高度
     * </pre>
     *
     * <code>float altitudeHeight = 11;</code>
     */
    public float getAltitudeHeight() {
      return altitudeHeight_;
    }

    public static final int AIRSPEED_FIELD_NUMBER = 12;
    private float airspeed_;
    /**
     * <pre>
     *空速
     * </pre>
     *
     * <code>float airspeed = 12;</code>
     */
    public float getAirspeed() {
      return airspeed_;
    }

    public static final int VELOCITY_FIELD_NUMBER = 13;
    private float velocity_;
    /**
     * <pre>
     *地速
     * </pre>
     *
     * <code>float velocity = 13;</code>
     */
    public float getVelocity() {
      return velocity_;
    }

    public static final int TIMESTAMPS_FIELD_NUMBER = 14;
    private long timestamps_;
    /**
     * <pre>
     *Unix时间戳
     * </pre>
     *
     * <code>int64 timestamps = 14;</code>
     */
    public long getTimestamps() {
      return timestamps_;
    }

      public void setLatitude_(double latitude_) {
          this.latitude_ = latitude_;
      }

      public void setLongitude_(double longitude_) {
          this.longitude_ = longitude_;
      }

      public static int getTaskidFieldNumber() {
          return TASKID_FIELD_NUMBER;
      }


      private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (taskId_ != 0) {
        output.writeInt32(1, taskId_);
      }
      if (uavId_ != 0) {
        output.writeInt32(2, uavId_);
      }
      if (missionComputerId_ != 0) {
        output.writeInt32(3, missionComputerId_);
      }
      if (!getUavNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, uavName_);
      }
      if (latitude_ != 0D) {
        output.writeDouble(5, latitude_);
      }
      if (longitude_ != 0D) {
        output.writeDouble(6, longitude_);
      }
      if (pitch_ != 0F) {
        output.writeFloat(7, pitch_);
      }
      if (roll_ != 0F) {
        output.writeFloat(8, roll_);
      }
      if (yaw_ != 0F) {
        output.writeFloat(9, yaw_);
      }
      if (ultrasonicHeight_ != 0F) {
        output.writeFloat(10, ultrasonicHeight_);
      }
      if (altitudeHeight_ != 0F) {
        output.writeFloat(11, altitudeHeight_);
      }
      if (airspeed_ != 0F) {
        output.writeFloat(12, airspeed_);
      }
      if (velocity_ != 0F) {
        output.writeFloat(13, velocity_);
      }
      if (timestamps_ != 0L) {
        output.writeInt64(14, timestamps_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (taskId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, taskId_);
      }
      if (uavId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, uavId_);
      }
      if (missionComputerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, missionComputerId_);
      }
      if (!getUavNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, uavName_);
      }
      if (latitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, latitude_);
      }
      if (longitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, longitude_);
      }
      if (pitch_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, pitch_);
      }
      if (roll_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, roll_);
      }
      if (yaw_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, yaw_);
      }
      if (ultrasonicHeight_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, ultrasonicHeight_);
      }
      if (altitudeHeight_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, altitudeHeight_);
      }
      if (airspeed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, airspeed_);
      }
      if (velocity_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, velocity_);
      }
      if (timestamps_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, timestamps_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Data)) {
        return super.equals(obj);
      }
      Data other = (Data) obj;

      boolean result = true;
      result = result && (getTaskId()
          == other.getTaskId());
      result = result && (getUavId()
          == other.getUavId());
      result = result && (getMissionComputerId()
          == other.getMissionComputerId());
      result = result && getUavName()
          .equals(other.getUavName());
      result = result && (
          Double.doubleToLongBits(getLatitude())
          == Double.doubleToLongBits(
              other.getLatitude()));
      result = result && (
          Double.doubleToLongBits(getLongitude())
          == Double.doubleToLongBits(
              other.getLongitude()));
      result = result && (
          Float.floatToIntBits(getPitch())
          == Float.floatToIntBits(
              other.getPitch()));
      result = result && (
          Float.floatToIntBits(getRoll())
          == Float.floatToIntBits(
              other.getRoll()));
      result = result && (
          Float.floatToIntBits(getYaw())
          == Float.floatToIntBits(
              other.getYaw()));
      result = result && (
          Float.floatToIntBits(getUltrasonicHeight())
          == Float.floatToIntBits(
              other.getUltrasonicHeight()));
      result = result && (
          Float.floatToIntBits(getAltitudeHeight())
          == Float.floatToIntBits(
              other.getAltitudeHeight()));
      result = result && (
          Float.floatToIntBits(getAirspeed())
          == Float.floatToIntBits(
              other.getAirspeed()));
      result = result && (
          Float.floatToIntBits(getVelocity())
          == Float.floatToIntBits(
              other.getVelocity()));
      result = result && (getTimestamps()
          == other.getTimestamps());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TASKID_FIELD_NUMBER;
      hash = (53 * hash) + getTaskId();
      hash = (37 * hash) + UAVID_FIELD_NUMBER;
      hash = (53 * hash) + getUavId();
      hash = (37 * hash) + MISSIONCOMPUTERID_FIELD_NUMBER;
      hash = (53 * hash) + getMissionComputerId();
      hash = (37 * hash) + UAVNAME_FIELD_NUMBER;
      hash = (53 * hash) + getUavName().hashCode();
      hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLatitude()));
      hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLongitude()));
      hash = (37 * hash) + PITCH_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getPitch());
      hash = (37 * hash) + ROLL_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getRoll());
      hash = (37 * hash) + YAW_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getYaw());
      hash = (37 * hash) + ULTRASONICHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getUltrasonicHeight());
      hash = (37 * hash) + ALTITUDEHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getAltitudeHeight());
      hash = (37 * hash) + AIRSPEED_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getAirspeed());
      hash = (37 * hash) + VELOCITY_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getVelocity());
      hash = (37 * hash) + TIMESTAMPS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamps());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Data prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Data)
        DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LiveTrack.internal_static_Data_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LiveTrack.internal_static_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Data.class, Builder.class);
      }

      // Construct using LiveTrack.Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        taskId_ = 0;

        uavId_ = 0;

        missionComputerId_ = 0;

        uavName_ = "";

        latitude_ = 0D;

        longitude_ = 0D;

        pitch_ = 0F;

        roll_ = 0F;

        yaw_ = 0F;

        ultrasonicHeight_ = 0F;

        altitudeHeight_ = 0F;

        airspeed_ = 0F;

        velocity_ = 0F;

        timestamps_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LiveTrack.internal_static_Data_descriptor;
      }

      public Data getDefaultInstanceForType() {
        return Data.getDefaultInstance();
      }

      public Data build() {
        Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Data buildPartial() {
        Data result = new Data(this);
        result.taskId_ = taskId_;
        result.uavId_ = uavId_;
        result.missionComputerId_ = missionComputerId_;
        result.uavName_ = uavName_;
        result.latitude_ = latitude_;
        result.longitude_ = longitude_;
        result.pitch_ = pitch_;
        result.roll_ = roll_;
        result.yaw_ = yaw_;
        result.ultrasonicHeight_ = ultrasonicHeight_;
        result.altitudeHeight_ = altitudeHeight_;
        result.airspeed_ = airspeed_;
        result.velocity_ = velocity_;
        result.timestamps_ = timestamps_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Data) {
          return mergeFrom((Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Data other) {
        if (other == Data.getDefaultInstance()) return this;
        if (other.getTaskId() != 0) {
          setTaskId(other.getTaskId());
        }
        if (other.getUavId() != 0) {
          setUavId(other.getUavId());
        }
        if (other.getMissionComputerId() != 0) {
          setMissionComputerId(other.getMissionComputerId());
        }
        if (!other.getUavName().isEmpty()) {
          uavName_ = other.uavName_;
          onChanged();
        }
        if (other.getLatitude() != 0D) {
          setLatitude(other.getLatitude());
        }
        if (other.getLongitude() != 0D) {
          setLongitude(other.getLongitude());
        }
        if (other.getPitch() != 0F) {
          setPitch(other.getPitch());
        }
        if (other.getRoll() != 0F) {
          setRoll(other.getRoll());
        }
        if (other.getYaw() != 0F) {
          setYaw(other.getYaw());
        }
        if (other.getUltrasonicHeight() != 0F) {
          setUltrasonicHeight(other.getUltrasonicHeight());
        }
        if (other.getAltitudeHeight() != 0F) {
          setAltitudeHeight(other.getAltitudeHeight());
        }
        if (other.getAirspeed() != 0F) {
          setAirspeed(other.getAirspeed());
        }
        if (other.getVelocity() != 0F) {
          setVelocity(other.getVelocity());
        }
        if (other.getTimestamps() != 0L) {
          setTimestamps(other.getTimestamps());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Data) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int taskId_ ;
      /**
       * <pre>
       *任务ID
       * </pre>
       *
       * <code>int32 taskId = 1;</code>
       */
      public int getTaskId() {
        return taskId_;
      }
      /**
       * <pre>
       *任务ID
       * </pre>
       *
       * <code>int32 taskId = 1;</code>
       */
      public Builder setTaskId(int value) {
        
        taskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *任务ID
       * </pre>
       *
       * <code>int32 taskId = 1;</code>
       */
      public Builder clearTaskId() {
        
        taskId_ = 0;
        onChanged();
        return this;
      }

      private int uavId_ ;
      /**
       * <pre>
       *无人机ID
       * </pre>
       *
       * <code>int32 uavId = 2;</code>
       */
      public int getUavId() {
        return uavId_;
      }
      /**
       * <pre>
       *无人机ID
       * </pre>
       *
       * <code>int32 uavId = 2;</code>
       */
      public Builder setUavId(int value) {
        
        uavId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机ID
       * </pre>
       *
       * <code>int32 uavId = 2;</code>
       */
      public Builder clearUavId() {
        
        uavId_ = 0;
        onChanged();
        return this;
      }

      private int missionComputerId_ ;
      /**
       * <pre>
       *任务计算机ID
       * </pre>
       *
       * <code>int32 missionComputerId = 3;</code>
       */
      public int getMissionComputerId() {
        return missionComputerId_;
      }
      /**
       * <pre>
       *任务计算机ID
       * </pre>
       *
       * <code>int32 missionComputerId = 3;</code>
       */
      public Builder setMissionComputerId(int value) {
        
        missionComputerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *任务计算机ID
       * </pre>
       *
       * <code>int32 missionComputerId = 3;</code>
       */
      public Builder clearMissionComputerId() {
        
        missionComputerId_ = 0;
        onChanged();
        return this;
      }

      private Object uavName_ = "";
      /**
       * <pre>
       *无人机名称
       * </pre>
       *
       * <code>string uavName = 4;</code>
       */
      public String getUavName() {
        Object ref = uavName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uavName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *无人机名称
       * </pre>
       *
       * <code>string uavName = 4;</code>
       */
      public com.google.protobuf.ByteString
          getUavNameBytes() {
        Object ref = uavName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uavName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *无人机名称
       * </pre>
       *
       * <code>string uavName = 4;</code>
       */
      public Builder setUavName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uavName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机名称
       * </pre>
       *
       * <code>string uavName = 4;</code>
       */
      public Builder clearUavName() {
        
        uavName_ = getDefaultInstance().getUavName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *无人机名称
       * </pre>
       *
       * <code>string uavName = 4;</code>
       */
      public Builder setUavNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uavName_ = value;
        onChanged();
        return this;
      }

      private double latitude_ ;
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double latitude = 5;</code>
       */
      public double getLatitude() {
        return latitude_;
      }
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double latitude = 5;</code>
       */
      public Builder setLatitude(double value) {
        
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double latitude = 5;</code>
       */
      public Builder clearLatitude() {
        
        latitude_ = 0D;
        onChanged();
        return this;
      }

      private double longitude_ ;
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double longitude = 6;</code>
       */
      public double getLongitude() {
        return longitude_;
      }
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double longitude = 6;</code>
       */
      public Builder setLongitude(double value) {
        
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double longitude = 6;</code>
       */
      public Builder clearLongitude() {
        
        longitude_ = 0D;
        onChanged();
        return this;
      }

      private float pitch_ ;
      /**
       * <pre>
       *俯仰角
       * </pre>
       *
       * <code>float pitch = 7;</code>
       */
      public float getPitch() {
        return pitch_;
      }
      /**
       * <pre>
       *俯仰角
       * </pre>
       *
       * <code>float pitch = 7;</code>
       */
      public Builder setPitch(float value) {
        
        pitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *俯仰角
       * </pre>
       *
       * <code>float pitch = 7;</code>
       */
      public Builder clearPitch() {
        
        pitch_ = 0F;
        onChanged();
        return this;
      }

      private float roll_ ;
      /**
       * <pre>
       *倾斜角/横滚角
       * </pre>
       *
       * <code>float roll = 8;</code>
       */
      public float getRoll() {
        return roll_;
      }
      /**
       * <pre>
       *倾斜角/横滚角
       * </pre>
       *
       * <code>float roll = 8;</code>
       */
      public Builder setRoll(float value) {
        
        roll_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *倾斜角/横滚角
       * </pre>
       *
       * <code>float roll = 8;</code>
       */
      public Builder clearRoll() {
        
        roll_ = 0F;
        onChanged();
        return this;
      }

      private float yaw_ ;
      /**
       * <pre>
       *航向角
       * </pre>
       *
       * <code>float yaw = 9;</code>
       */
      public float getYaw() {
        return yaw_;
      }
      /**
       * <pre>
       *航向角
       * </pre>
       *
       * <code>float yaw = 9;</code>
       */
      public Builder setYaw(float value) {
        
        yaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *航向角
       * </pre>
       *
       * <code>float yaw = 9;</code>
       */
      public Builder clearYaw() {
        
        yaw_ = 0F;
        onChanged();
        return this;
      }

      private float ultrasonicHeight_ ;
      /**
       * <pre>
       *相对高度
       * </pre>
       *
       * <code>float ultrasonicHeight = 10;</code>
       */
      public float getUltrasonicHeight() {
        return ultrasonicHeight_;
      }
      /**
       * <pre>
       *相对高度
       * </pre>
       *
       * <code>float ultrasonicHeight = 10;</code>
       */
      public Builder setUltrasonicHeight(float value) {
        
        ultrasonicHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相对高度
       * </pre>
       *
       * <code>float ultrasonicHeight = 10;</code>
       */
      public Builder clearUltrasonicHeight() {
        
        ultrasonicHeight_ = 0F;
        onChanged();
        return this;
      }

      private float altitudeHeight_ ;
      /**
       * <pre>
       *海拔高度
       * </pre>
       *
       * <code>float altitudeHeight = 11;</code>
       */
      public float getAltitudeHeight() {
        return altitudeHeight_;
      }
      /**
       * <pre>
       *海拔高度
       * </pre>
       *
       * <code>float altitudeHeight = 11;</code>
       */
      public Builder setAltitudeHeight(float value) {
        
        altitudeHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *海拔高度
       * </pre>
       *
       * <code>float altitudeHeight = 11;</code>
       */
      public Builder clearAltitudeHeight() {
        
        altitudeHeight_ = 0F;
        onChanged();
        return this;
      }

      private float airspeed_ ;
      /**
       * <pre>
       *空速
       * </pre>
       *
       * <code>float airspeed = 12;</code>
       */
      public float getAirspeed() {
        return airspeed_;
      }
      /**
       * <pre>
       *空速
       * </pre>
       *
       * <code>float airspeed = 12;</code>
       */
      public Builder setAirspeed(float value) {
        
        airspeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *空速
       * </pre>
       *
       * <code>float airspeed = 12;</code>
       */
      public Builder clearAirspeed() {
        
        airspeed_ = 0F;
        onChanged();
        return this;
      }

      private float velocity_ ;
      /**
       * <pre>
       *地速
       * </pre>
       *
       * <code>float velocity = 13;</code>
       */
      public float getVelocity() {
        return velocity_;
      }
      /**
       * <pre>
       *地速
       * </pre>
       *
       * <code>float velocity = 13;</code>
       */
      public Builder setVelocity(float value) {
        
        velocity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *地速
       * </pre>
       *
       * <code>float velocity = 13;</code>
       */
      public Builder clearVelocity() {
        
        velocity_ = 0F;
        onChanged();
        return this;
      }

      private long timestamps_ ;
      /**
       * <pre>
       *Unix时间戳
       * </pre>
       *
       * <code>int64 timestamps = 14;</code>
       */
      public long getTimestamps() {
        return timestamps_;
      }
      /**
       * <pre>
       *Unix时间戳
       * </pre>
       *
       * <code>int64 timestamps = 14;</code>
       */
      public Builder setTimestamps(long value) {
        
        timestamps_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Unix时间戳
       * </pre>
       *
       * <code>int64 timestamps = 14;</code>
       */
      public Builder clearTimestamps() {
        
        timestamps_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Data)
    }

    // @@protoc_insertion_point(class_scope:Data)
    private static final Data DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Data();
    }

    public static Data getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Data>
        PARSER = new com.google.protobuf.AbstractParser<Data>() {
      public Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Data(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Data> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Data> getParserForType() {
      return PARSER;
    }

    public Data getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Data_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\017LiveTrack.proto\"\212\002\n\004Data\022\016\n\006taskId\030\001 \001" +
      "(\005\022\r\n\005uavId\030\002 \001(\005\022\031\n\021missionComputerId\030\003" +
      " \001(\005\022\017\n\007uavName\030\004 \001(\t\022\020\n\010latitude\030\005 \001(\001\022" +
      "\021\n\tlongitude\030\006 \001(\001\022\r\n\005pitch\030\007 \001(\002\022\014\n\004rol" +
      "l\030\010 \001(\002\022\013\n\003yaw\030\t \001(\002\022\030\n\020ultrasonicHeight" +
      "\030\n \001(\002\022\026\n\016altitudeHeight\030\013 \001(\002\022\020\n\010airspe" +
      "ed\030\014 \001(\002\022\020\n\010velocity\030\r \001(\002\022\022\n\ntimestamps" +
      "\030\016 \001(\003b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Data_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Data_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Data_descriptor,
        new String[] { "TaskId", "UavId", "MissionComputerId", "UavName", "Latitude", "Longitude", "Pitch", "Roll", "Yaw", "UltrasonicHeight", "AltitudeHeight", "Airspeed", "Velocity", "Timestamps", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
